#!/usr/bin/env python
"""
usage: remindme [at|on] at-compatible-strings [about|to] mail-subject-and-body

schedules an email using at

examples

remindme tuesday to pay for hamburgers
remindme at 17:00 about buying milk
remindme on 15 april to file taxes
"""

import dateutil.parser
import os
import pwd
import sys

args = sys.argv[1:]

if args[0] == "at" or args[0] == "on":
   args = args[1:]

aboutidx = None
if "about" in args:
   aboutidx = args.index("about")
toidx = None
if "to" in args:
   toidx = args.index("to")

if aboutidx == -1 and toidx == -1:
   print __doc__
   sys.exit(1)

parts_split = min(filter(None, (aboutidx, toidx))) # FUTURE: a bit too fragile

at_parts = args[:parts_split]
at_parts = " ".join(at_parts).strip().split()
if at_parts[0] == "in":
   at_parts[0] = "now"
   at_parts.insert(1, "+")
at_cmd = "at %s" % (" ".join(at_parts))

my_uid = os.geteuid()
my_username = pwd.getpwuid(my_uid)[0]

mail_parts = args[parts_split + 1:]
mail_cmd = "#!/bin/sh\necho | mail -s '%s' %s" % (" ".join(mail_parts), my_username)

os.chdir("/")

at_stdin, at_stdout, at_stderr = os.popen3(at_cmd)
at_stdin.write(mail_cmd)
at_stdin.write(os.linesep)
at_stdin.close()

at_stdout = at_stdout.read()
at_stderr = at_stderr.read()
at_output = at_stderr

sh_warning = "warning: commands will be executed using /bin/sh\n"
if at_output.startswith(sh_warning):
   at_output = at_output.replace(sh_warning, "")

if not at_output.startswith("job "):
   msg = "at_cmd {!r} with input {!r} failed with stdout={!r} and stderr={!r}" \
      .format(at_cmd, mail_cmd, at_stdout, at_stderr)
   raise RuntimeError(msg)

at_output_parts = at_output.split(" ")
at_job_id = at_output_parts[1]
at_job_time = " ".join(at_output_parts[3:])

google_time = dateutil.parser.parse(at_job_time).strftime("%Y-%m-%d %H:%M %p")

# gcal quick --detail_all --calendar="Martin Dengler"
#  'what, 'where,' and 'when' - from https://support.google.com/calendar/answer/36604?hl=en#text
what = " ".join(mail_parts)
where = ""
when = "on {}".format(google_time)

gcal_cmd = 'gcal quick --detail_all --calendar="Martin Dengler" "{} {} {}"'.format(what, where, when)
#gcal_stdin, gcal_stdout, gcal_stderr = os.popen3(gcal_cmd)
#gcal_stdin.close()
sys.stderr.write("{}\n".format(gcal_cmd))
os.system(gcal_cmd)
